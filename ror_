#!/bin/bash

sudo touch /var/tmp/dump
sudo rm /var/tmp/dump

cd && sudo apt update && sudo apt upgrade

sudo apt install curl
curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list

sudo apt-get update
sudo apt-get install -y git-core zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev software-properties-common libffi-dev nodejs yarn

cd
rbenv=`which rbenv`
if [[ "" = $rbenv ]]
then
  sudo rm -rf /usr/local/rbenv
  sudo mkdir -p /usr/local/rbenv
  sudo chown $USER:$USER /usr/local/rbenv

  sed -i '/rbenv/d' $HOME/.bashrc &> /dev/null
  git clone https://github.com/rbenv/rbenv.git /usr/local/rbenv
  echo 'export PATH=/usr/local/rbenv/bin:$PATH' >> $HOME/.bashrc
  echo 'export RBENV_ROOT=/usr/local/rbenv/' >> $HOME/.bashrc
  echo 'eval "$(rbenv init -)"' >> $HOME/.bashrc
  # exec $SHELL
  source $HOME/.bashrc

  git clone https://github.com/rbenv/ruby-build.git /usr/local/rbenv/plugins/ruby-build
  echo 'export PATH=/usr/local/rbenv/plugins/ruby-build/bin:$PATH' >> $HOME/.bashrc
  # exec $SHELL
  source $HOME/.bashrc

  export PATH=/usr/local/rbenv/bin:/usr/local/rbenv/plugins/ruby-build/bin:$PATH
  eval "$(rbenv init -)"

  printf "\n\n\n"
  read -p 'PLEASE SPECIFY RUBY VERSION: ' ruby_version

  rbenv install $ruby_version
  rbenv global $ruby_version
fi

ruby -v

printf "\n\n\n"
read -p 'PLEASE SPECIFY BUNDLER VERSION: ' bundler_version
if [[ "" != $bundler_version ]]
then
  gem install bundler -v $bundler_version
else
  gem install bundler
fi

printf "\n\n\n"
echo "Installing default latest rails..."
gem install rails
rbenv rehash

rails -v

printf "\n\n\n"
echo "PLEASE SPECIFY DATABASE: "
echo "1. MySQL"
echo "2. PostgreSQL"
echo "3. Skip"

read ver

inf_loop=1
while [[ $inf_loop -eq 1 ]]
do
  if [[ $ver -eq 1 ]]
  then
    printf "\n\n\n"
    echo "Installing MySQL ..."
    sudo apt-get install mysql-server mysql-client libmysqlclient-dev
    inf_loop=0
  elif [[ $ver -eq 2 ]]
  then
    printf "\n\n\n"
    echo "Installing PostgreSQL ..."
    sudo apt install postgresql-12 libpq-dev
    inf_loop=0
  elif [[ $ver -eq 3 ]]
  then
    echo "Database installation skipped ..."
    inf_loop=0
  else
    echo "No database selected."
    read ver
  fi
done
